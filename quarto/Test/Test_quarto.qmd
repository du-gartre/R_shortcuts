---
title: "RStudio shourtcuts that will save your life"
author: "David U. Garibay-Treviño, M.Sc."
date: "2023-10-16"
categories: ["RStudio", "Shortcuts", "Snippets"]
toc: true
code-link: true
code-copy: true
title-block-banner: true
comments: false
format: html
editor: visual
---

# Introduction

------------------------------------------------------------------------

Once you have started your journey as an R code developer, and you have had some experience writting scripts and code in general, then you may have thought "can this code be written faster?" either for simple or for large scale projects.

If you have kept thinking on how to speed up your code writting process or even if you only want to be more comfortable writing code, then you have arrived to the right place!

In this brief tutorial I will try my best to share some of the most used shortcuts in R + RStudio, according to my experience and to that of other users that have also talked on the subject (check references). To make this tutorial a little bit more intuitive, I will break the shortcuts in the next categories: a. b. c.

Besides, I will show the shortcut as it should be typed for both, windows and mac in the following format:

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|                Alt+Shift+K                |            Option+Shift+K             |

: **Show keyboard shortcuts help**

**Show keyboard shortcuts help** is the first shortcut we will see. What it does is showing us a list of some of the most useful shortcuts in the screen. To exit this screen you just have to press `Escape`.

![](figs/help.png){fig-align="center" width="100%"}

In case you need to check the full list of shortcuts, in the upper right corner of the help screen you will find a link called **See All Shortcuts** which will take you to a page containing all the RStudio shortcuts for specified for Mac, Windows and Linux.

::: callout-important
Talk about the github repo!

CTRL = ⌘ Command Alt = ⌥ Option
:::

# 1. Insert

------------------------------------------------------------------------

Want a new R Script? easy-peasy!

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|                Ctr+Shift+N                |              Cmd+Shift+N              |

: **Create a new R Script**

You want to assign an object? Instead of pressing `<` and then `-`, you can do it directly by pressing:

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|                   Alt+-                   |               Option+-                |

: **Insert assignment operator `<-`**

While concatenating functions or operations, forget about writing the pipe by hand. You can insert it directly using this shortcut.

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|               Ctrl+Shift+M                |              Cmd+Shift+M              |

: **Insert pipe operator`%>%` or `|>`**

::: {.callout-note title="Defining the default pipe in global options" collapse="\"true"}
The pipe that is going to be inserted is the one preset in `Global Options`.

You can preset the type of pipe you want to insert while using the previous shortcut by accessing `Global Options/Code/Editing` and ticking if you would like to use the native pipe operator.

![Defining the default pipe in RStudio](figs/pipe.png)
:::

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|                 Alt+Cmd+I                 |             Option+Cmd+I              |

: **Insert code chunk (for Quarto and RMarkdown)**

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|                Cmd+Shift+C                |              Cmd+Shift+C              |

: **Comment/uncomment current line selection**

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|                Cmd+Shift+R                |              Cmd+Shift+R              |

: **Insert section break** (ideal for code outlines)

::: callout-tip
The section breaks have the same structure as the Quarto and RMarkdown headers.

-   `#` stands for 1st level header,
-   `##` stands for 2nd level headers,
-   `###` stands for 3rd level headers, and so on.
:::

::: callout-warning
-   Reindent selection
:::

# 2. Focus on panes

------------------------------------------------------------------------

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|                  Ctrl+1                   |                Ctrl+1                 |

: **Move cursor to Source Editor**

| Windows ![](figs/windows.png){width="5%"} | Mac ![](figs/apple.png){width="6.5%"} |
|:------------------------------------:|:--------------------------------:|
|                  Ctrl+2                   |                Ctrl+2                 |

: **Move cursor to Console**

# 2. Moving between tabs

------------------------------------------------------------------------

-   Open next tab
-   Open previous tab

# 2. Find files and functions

------------------------------------------------------------------------

-   Go to file/function
-   Find/Replace text (in active tab)
-   Find in files

# 4. Autocompletion

------------------------------------------------------------------------

<!-- Tab to open and complete -->

<!-- Esc to close -->

<!-- Ctrl/Cmd + Space to open -->

-   code autocompletion
-   path autocompletion
    -   "" Working directory
    -   "/" Root directory
    -   "../" Move one level up

# 5. Running code

|                                                                                                                                                                                     |
|:-----------------------------------------------------------------------|
| \- Run current line - Run current line (Witout moving the cursor) - Run the script from the *B*eginning to the current line and - Run the script from the current line to the *E*nd |
| \# 6. Snippets                                                                                                                                                                      |

-   Create your own snippets!

# Conclusion

------------------------------------------------------------------------

# References

------------------------------------------------------------------------

::: callout-note
Cite this page: Lehmann, L. (2023, April 18). *Introduction to Social Media Scraping*. Hertie Coding Club. [URL](https://www.hertiecodingclub.com/learn/rstudio/social_media_scraping/)
:::
